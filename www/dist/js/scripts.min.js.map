{"version":3,"sources":["js/Spotify.js","js/query.js"],"names":["Spotify","csrf","port","token","request","path","cb","id","Math","random","toString","replace","substr","options","url","error","xhr","status","success","response","data","$","get","this","ready","open","Error","ajax","method","t","play","uri","toggle","playing","pause","query","obj","str","window","location","href","split","arr","i"],"mappings":"AAAA,GAAIA,SAAU,SAASC,GAIrB,GAAIC,GAAO,KACPC,EAAQ,GAERC,EAAU,SAASC,EAAMC,GAC3B,GAAIC,GAAK,WACP,MAAOC,MAAKC,SAASC,SAAS,IAAIC,QAAQ,WAAY,IAAIC,OAAO,EAAG,IAAM,KAGxEC,GACFC,IAAK,WAAaP,IAAO,kBAAoBL,EAAOG,EACpDU,MAAO,SAASC,EAAKC,GACnBX,EAAGW,IAELC,QAAS,SAASC,GAChB,GAAIC,GAAOD,CACXb,GAAGc,IAIPC,GAAEC,IAAIT,GAKRU,MAAKC,MAAQ,QAASA,GAAMC,EAAMnB,GAEZ,kBAATmB,KAAqBnB,EAAKmB,GAErCrB,EAAQ,uCAAwC,SAASe,GACvD,GAAiB,UAAbA,GAA+B,KAAPjB,EAAa,CACvC,GAAIA,GAAQ,KAAM,MAAO,IAAIwB,OAAM,kCACnCxB,IAAQ,EACRsB,EAAMlB,OACgB,UAAba,GAAwBjB,GAAQ,KACzCI,EAAG,kFAGHe,EAAEM,MACAb,IAAK,6DACLc,OAAQ,MACRV,QAAS,SAASC,GAChBhB,EAAQgB,EAASU,EACjBvB,UAQViB,KAAKN,OAAS,SAAgBX,GAC5BF,EAAQ,4BAA8BH,EAAO,UAAYE,EAAO,SAASgB,GACvEb,EAAGa,MAIPI,KAAKO,KAAO,SAAcC,EAAKzB,GACxByB,GAAsB,gBAARA,GAGjB3B,EAAQ,0BAA4BH,EAAO,UAAYE,EAAQ,QAAU4B,EAAK,SAASZ,GACrFb,EAAGa,KAHLb,EAAG,GAAIoB,OAAM,0CAQjBH,KAAKS,OAAS,SAAgB1B,GAC5BiB,KAAKN,OAAO,SAASG,GACnBhB,EAAQ,2BAA6BH,EAAO,UAAYE,EAAQ,UAAYiB,EAAKa,QAAS,SAASd,GACjGb,EAAGa,QAKTI,KAAKW,MAAQ,SAAe5B,GAC1BF,EAAQ,2BAA6BH,EAAO,UAAYE,EAAQ,cAAe,SAASgB,GACtFb,EAAGa;AChFT,GAAIgB,OAAQ,WACV,GAAIC,MACAC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,KAAK,GACtCC,EAAML,EAAII,MAAM,IACpB,KAAK,GAAIE,KAAKD,GAAK,CACjB,GAAID,GAAQC,EAAIC,GAAGF,MAAM,IACzBL,GAAIK,EAAM,IAAMA,EAAM,GAExB,MAAOL","file":"scripts.min.js","sourcesContent":["var Spotify = function(csrf) {\n\n  //general request functions:\n\n  var port = 4370;\n  var token = '';\n\n  var request = function(path, cb) {\n    var id = function() {\n      return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10) + '.';\n    };\n\n    var options = {\n      url: 'https://' + id() + 'spotilocal.com:' + port + path,\n      error: function(xhr, status) {\n        cb(status);\n      },\n      success: function(response) {\n        var data = response;\n        cb(data);\n      }\n    };\n\n    $.get(options);\n  };\n\n  //custom functions:\n\n  this.ready = function ready(open, cb) {\n\n    if (typeof open === 'function') cb = open;\n\n    request('/service/version.json?service=remote', function(response) {\n      if (response === 'error' && port < 4380) {\n        if (port >= 4379) return new Error('spotify web helper not running.');\n        port += 1;\n        ready(cb);\n      } else if (response === 'error' && port >= 4380) {\n        cb(\"Spotify application is not running or doesn't support the internal web server.\");\n      } else {\n\n        $.ajax({\n          url: 'https://jsonp.afeld.me/?url=https://open.spotify.com/token',\n          method: 'GET',\n          success: function(response) {\n            token = response.t;\n            cb();\n          }\n        });\n\n      }\n    });\n  };\n\n  this.status = function status(cb) {\n    request('/remote/status.json?csrf=' + csrf + '&oauth=' + token, function(response) {\n      cb(response);\n    });\n  };\n\n  this.play = function play(uri, cb) {\n    if (!uri || typeof uri !== 'string') {\n      cb(new Error('uri is needed in order to play song.'));\n    } else {\n      request('/remote/play.json?csrf=' + csrf + '&oauth=' + token + '&uri=' + uri, function(response) {\n        cb(response);\n      });\n    }\n  };\n\n  this.toggle = function toggle(cb) {\n    this.status(function(data) {\n      request('/remote/pause.json?csrf=' + csrf + '&oauth=' + token + '&pause=' + data.playing, function(response) {\n        cb(response);\n      });\n    });\n  };\n\n  this.pause = function pause(cb) {\n    request('/remote/pause.json?csrf=' + csrf + '&oauth=' + token + '&pause=true', function(response) {\n      cb(response);\n    });\n  };\n};\n","var query = function() {\n  var obj = {};\n  var str = window.location.href.split('?')[1];\n  var arr = str.split('&');\n  for (var i in arr) {\n    var split = arr[i].split('=');\n    obj[split[0]] = split[1];\n  }\n  return obj;\n}();\n"],"sourceRoot":"/source/"}