{"version":3,"sources":["js/Spotify.js","js/query.js"],"names":["Spotify","csrf","port","token","request","path","cb","id","Math","random","toString","replace","substr","XMLHttpRequest","open","onload","status","data","JSON","parse","responseText","onerror","send","this","ready","response","Error","$","ajax","url","method","success","t","play","uri","toggle","playing","pause","query","obj","window","location","href","split","length","str","arr","i"],"mappings":"AAAA,GAAIA,SAAU,SAASC,GAIrB,GAAIC,GAAO,KACPC,EAAQ,GAERC,EAAU,SAASC,EAAMC,GAC3B,GAAIC,GAAK,WACP,MAAOC,MAAKC,SAASC,SAAS,IAAIC,QAAQ,WAAY,IAAIC,OAAO,EAAG,IAAM,KAGxER,EAAU,GAAIS,eAClBT,GAAQU,KAAK,MAAO,WAAaP,IAAO,kBAAoBL,EAAOG,GAAM,GAEzED,EAAQW,OAAS,WACf,GAAIX,EAAQY,QAAU,KAAOZ,EAAQY,OAAS,IAAK,CACjD,GAAIC,GAAOC,KAAKC,MAAMf,EAAQgB,aAC9Bd,GAAGW,OAEHX,GAAG,UAIPF,EAAQiB,QAAU,WAChBf,EAAG,UAGLF,EAAQkB,OAKVC,MAAKC,MAAQ,QAASA,GAAMlB,GAE1BF,EAAQ,uCAAwC,SAASqB,GACvD,GAAiB,UAAbA,GAA+B,KAAPvB,EAAa,CACvC,GAAIA,GAAQ,KAAM,MAAO,IAAIwB,OAAM,kCACnCxB,IAAQ,EACRsB,EAAMlB,OACD,IAAiB,UAAbmB,GAAwBvB,GAAQ,KACzCI,EAAG,sFACE,CAELqB,EAAEC,MACAC,IAAK,6DACLC,OAAQ,MACRC,QAAS,SAASN,GAChBtB,EAAQsB,EAASO,EACjB1B,MAIJ,IAAIF,GAAU,GAAIS,eAClBT,GAAQU,KAAK,MAAO,8DAA8D,GAElFV,EAAQW,OAAS,WACf,GAAIX,EAAQY,QAAU,KAAOZ,EAAQY,OAAS,IAAK,CACjD,GAAIC,GAAOC,KAAKC,MAAMf,EAAQgB,aAC9BjB,GAAQc,EAAKe,EACb1B,QAEAA,GAAG,UAIPF,EAAQiB,QAAU,WAChBf,EAAG,UAGLF,EAAQkB,WAMdC,KAAKP,OAAS,SAAgBV,GAC5BF,EAAQ,4BAA8BH,EAAO,UAAYE,EAAO,SAASsB,GACvEnB,EAAGmB,MAIPF,KAAKU,KAAO,SAAcC,EAAK5B,GACxB4B,GAAsB,gBAARA,GAGjB9B,EAAQ,0BAA4BH,EAAO,UAAYE,EAAQ,QAAU+B,EAAK,SAAST,GACrFnB,EAAGmB,KAHLnB,EAAG,GAAIoB,OAAM,0CAQjBH,KAAKY,OAAS,SAAgB7B,GAC5BiB,KAAKP,OAAO,SAASC,GACnBb,EAAQ,2BAA6BH,EAAO,UAAYE,EAAQ,UAAYc,EAAKmB,QAAS,SAASX,GACjGnB,EAAGmB,QAKTF,KAAKc,MAAQ,SAAe/B,GAC1BF,EAAQ,2BAA6BH,EAAO,UAAYE,EAAQ,cAAe,SAASsB,GACtFnB,EAAGmB;ACtGT,GAAIa,OAAQ,WACV,GAAIC,KACJ,IAAIC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,QAAU,EAAG,MAAOL,EACxD,IAAIM,GAAML,OAAOC,SAASC,KAAKC,MAAM,KAAK,GACtCG,EAAMD,EAAIF,MAAM,IACpB,KAAK,GAAII,KAAKD,GAAK,CACjB,GAAIH,GAAQG,EAAIC,GAAGJ,MAAM,IACzBJ,GAAII,EAAM,IAAMA,EAAM,GAExB,MAAOJ","file":"scripts.min.js","sourcesContent":["var Spotify = function(csrf) {\n\n  //general request functions:\n\n  var port = 4370;\n  var token = '';\n\n  var request = function(path, cb) {\n    var id = function() {\n      return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10) + '.';\n    };\n\n    var request = new XMLHttpRequest();\n    request.open('GET', 'https://' + id() + 'spotilocal.com:' + port + path, true);\n\n    request.onload = function() {\n      if (request.status >= 200 && request.status < 400) {\n        var data = JSON.parse(request.responseText);\n        cb(data);\n      } else {\n        cb('error');\n      }\n    };\n\n    request.onerror = function() {\n      cb('error');\n    };\n\n    request.send();\n  };\n\n  //custom functions:\n\n  this.ready = function ready(cb) {\n\n    request('/service/version.json?service=remote', function(response) {\n      if (response === 'error' && port < 4380) {\n        if (port >= 4379) return new Error('spotify web helper not running.');\n        port += 1;\n        ready(cb);\n      } else if (response === 'error' && port >= 4380) {\n        cb(\"Spotify application is not running or doesn't support the internal web server.\");\n      } else {\n\n        $.ajax({\n          url: 'https://jsonp.afeld.me/?url=https://open.spotify.com/token',\n          method: 'GET',\n          success: function(response) {\n            token = response.t;\n            cb();\n          }\n        });\n\n        var request = new XMLHttpRequest();\n        request.open('GET', 'https://jsonp.afeld.me/?url=https://open.spotify.com/token', true);\n\n        request.onload = function() {\n          if (request.status >= 200 && request.status < 400) {\n            var data = JSON.parse(request.responseText);\n            token = data.t;\n            cb();\n          } else {\n            cb('error');\n          }\n        };\n\n        request.onerror = function() {\n          cb('error');\n        };\n\n        request.send();\n\n      }\n    });\n  };\n\n  this.status = function status(cb) {\n    request('/remote/status.json?csrf=' + csrf + '&oauth=' + token, function(response) {\n      cb(response);\n    });\n  };\n\n  this.play = function play(uri, cb) {\n    if (!uri || typeof uri !== 'string') {\n      cb(new Error('uri is needed in order to play song.'));\n    } else {\n      request('/remote/play.json?csrf=' + csrf + '&oauth=' + token + '&uri=' + uri, function(response) {\n        cb(response);\n      });\n    }\n  };\n\n  this.toggle = function toggle(cb) {\n    this.status(function(data) {\n      request('/remote/pause.json?csrf=' + csrf + '&oauth=' + token + '&pause=' + data.playing, function(response) {\n        cb(response);\n      });\n    });\n  };\n\n  this.pause = function pause(cb) {\n    request('/remote/pause.json?csrf=' + csrf + '&oauth=' + token + '&pause=true', function(response) {\n      cb(response);\n    });\n  };\n};\n","var query = function() {\n  var obj = {};\n  if (window.location.href.split('?').length <= 1) return obj;\n  var str = window.location.href.split('?')[1];\n  var arr = str.split('&');\n  for (var i in arr) {\n    var split = arr[i].split('=');\n    obj[split[0]] = split[1];\n  }\n  return obj;\n}();\n"],"sourceRoot":"/source/"}